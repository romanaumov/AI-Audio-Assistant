{
    "audio_segments": [
        {
            "id": 0,
            "text": "Hi, everybody and welcome to a new exciting video in the audio signal processing for machine learning series. Last time we looked at the theory behind mel spectrograms. This time we'll be using that knowledge and we'll extract mel spectrograms using Python and li browser. So without any further ado, let's get started. So the first thing that we wanna do is just like import a bunch of like packages. So li browser, li browser doc display and map, put lip just like for review stuff. Next, we want to actually load uh an audio file with lib browser. So the first thing that we'll do is just um get a reference to uh the path to the file. And next we want to do is just like play you guys back like this audio file and you should be familiar with this because it's the one that we used also uh when we actually extracted uh vanilla spectrograms a couple of years ago. So let's listen to this scale and we have a second repetition of the same pattern.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "0.0",
            "questions": [
                "1. What topic is the video series focused on?",
                "2. What did the previous video cover regarding mel spectrograms?",
                "3. Which programming language and tool are being used to extract mel spectrograms?",
                "4. What is the first step mentioned in the video for the process of extracting mel spectrograms?",
                "5. Which packages are mentioned for import in the video?",
                "6. How does the presenter plan to play back the audio file?",
                "7. What type of audio file is being used for the demonstration?",
                "8. What previous content does the presenter reference when discussing the audio file?",
                "9. What is the significance of the audio file that is played back in the video?",
                "10. What pattern is mentioned in relation to the audio file being used?"
            ]
        },
        {
            "id": 1,
            "text": "stuff. Next, we want to actually load uh an audio file with lib browser. So the first thing that we'll do is just um get a reference to uh the path to the file. And next we want to do is just like play you guys back like this audio file and you should be familiar with this because it's the one that we used also uh when we actually extracted uh vanilla spectrograms a couple of years ago. So let's listen to this scale and we have a second repetition of the same pattern. OK. Simple C major scale uh with a piano.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "28.94",
            "questions": [
                "1. What library is being used to load the audio file?",
                "2. What is the first step mentioned for loading the audio file?",
                "3. What type of audio file is being referenced in the text?",
                "4. How is the audio file related to previous work with vanilla spectrograms?",
                "5. What musical scale is being played back in the audio file?",
                "6. What instrument is used to play the C major scale in the audio file?",
                "7. What does the phrase \"second repetition of the same pattern\" refer to in the context of the audio?",
                "8. Why might the author expect the audience to be familiar with the audio file?",
                "9. What is the significance of the C major scale in music?",
                "10. How does the text suggest the audio file will be presented to the audience?"
            ]
        },
        {
            "id": 2,
            "text": "and we have a second repetition of the same pattern. OK. Simple C major scale uh with a piano. OK. So next up what we wanna do is just like a uh yeah load uh this audio file in Li Brosa. And so for that, and you should be familiar with this right now. We do a Li Brosa dot load and we pass in the path to the file. What we get back is a signal uh which is just like an empire array and then ad sample rate and the default sample rate with libros is 22,050 Hertz. OK. So",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "60.209",
            "questions": [
                "1. What is being repeated in the text?",
                "2. What musical scale is mentioned in the text?",
                "3. Which instrument is referenced for playing the C major scale?",
                "4. What software is suggested for loading the audio file?",
                "5. What command is used to load an audio file in Li Brosa?",
                "6. What do you receive back after loading the audio file in Li Brosa?",
                "7. What type of array is referred to as a signal?",
                "8. What is the default sample rate in Li Brosa?",
                "9. What is the sample rate value mentioned for Li Brosa?",
                "10. What familiarity is expected from the reader regarding the process described?"
            ]
        },
        {
            "id": 3,
            "text": "OK. Simple C major scale uh with a piano. OK. So next up what we wanna do is just like a uh yeah load uh this audio file in Li Brosa. And so for that, and you should be familiar with this right now. We do a Li Brosa dot load and we pass in the path to the file. What we get back is a signal uh which is just like an empire array and then ad sample rate and the default sample rate with libros is 22,050 Hertz. OK. So uh moving on, uh I want to show you the male filter banks before we extract the mel spectrogram from this audio file.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "63.819",
            "questions": [
                "1. What is the first scale mentioned in the text?",
                "2. What software is used to load the audio file?",
                "3. What function is called to load the audio file in Li Brosa?",
                "4. What type of array is returned after loading the audio file?",
                "5. What is the default sample rate used by Li Brosa?",
                "6. What is the purpose of extracting the mel spectrogram from the audio file?",
                "7. What component is mentioned before extracting the mel spectrogram?",
                "8. What is the sample rate of 22,050 Hertz considered?",
                "9. What does the text suggest you should be familiar with regarding Li Brosa?",
                "10. What is the term used to describe the filter banks mentioned in the text?"
            ]
        },
        {
            "id": 4,
            "text": "OK. So next up what we wanna do is just like a uh yeah load uh this audio file in Li Brosa. And so for that, and you should be familiar with this right now. We do a Li Brosa dot load and we pass in the path to the file. What we get back is a signal uh which is just like an empire array and then ad sample rate and the default sample rate with libros is 22,050 Hertz. OK. So uh moving on, uh I want to show you the male filter banks before we extract the mel spectrogram from this audio file. So if you remember from my previous video on mel spectrograms, male filter banks are really the key to getting to male spectrograms because what we do is we extract the spectrogram kind of like a vanilla spectrogram and then we apply a male filter bank to it. In other words, we do a matrix multiplication between the male filter banks and the vanilla spectrogram. And what we get is the",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "68.339",
            "questions": [
                "1. What is the first step to load an audio file in Li Brosa?  ",
                "2. What function is used to load an audio file in Li Brosa?  ",
                "3. What type of data structure is returned when an audio file is loaded in Li Brosa?  ",
                "4. What is the default sample rate for audio files in Li Brosa?  ",
                "5. What are male filter banks used for in the context of audio processing?  ",
                "6. How do male filter banks relate to the extraction of mel spectrograms?  ",
                "7. What is the process to obtain a mel spectrogram from an audio file?  ",
                "8. What type of spectrogram is created before applying the male filter banks?  ",
                "9. What mathematical operation is performed between the male filter banks and the vanilla spectrogram?  ",
                "10. Why are male filter banks considered key to obtaining mel spectrograms?  "
            ]
        },
        {
            "id": 5,
            "text": "uh moving on, uh I want to show you the male filter banks before we extract the mel spectrogram from this audio file. So if you remember from my previous video on mel spectrograms, male filter banks are really the key to getting to male spectrograms because what we do is we extract the spectrogram kind of like a vanilla spectrogram and then we apply a male filter bank to it. In other words, we do a matrix multiplication between the male filter banks and the vanilla spectrogram. And what we get is the uh male spectrogram. OK. So now let's take a look at the at how we can extract this uh filter banks. Well, if you remember I gave you like all the the five different steps we we we should put into place to, to create a male filter bank. But the great thing about Libras is that we have a utility function that does all of that for us so that we",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "96.919",
            "questions": [
                "1. What are male filter banks used for in audio processing?",
                "2. How does the process of extracting a mel spectrogram begin?",
                "3. What is the relationship between vanilla spectrograms and mel spectrograms?",
                "4. What mathematical operation is performed between male filter banks and the vanilla spectrogram?",
                "5. Can you explain the concept of matrix multiplication in the context of mel spectrogram extraction?",
                "6. What are the five different steps mentioned for creating a male filter bank?",
                "7. How does the Libras utility function simplify the process of creating male filter banks?",
                "8. What is the significance of using male filter banks in audio analysis?",
                "9. In what context was the previous video on mel spectrograms referenced?",
                "10. What outcome do we achieve by applying male filter banks to a vanilla spectrogram?"
            ]
        },
        {
            "id": 6,
            "text": "So if you remember from my previous video on mel spectrograms, male filter banks are really the key to getting to male spectrograms because what we do is we extract the spectrogram kind of like a vanilla spectrogram and then we apply a male filter bank to it. In other words, we do a matrix multiplication between the male filter banks and the vanilla spectrogram. And what we get is the uh male spectrogram. OK. So now let's take a look at the at how we can extract this uh filter banks. Well, if you remember I gave you like all the the five different steps we we we should put into place to, to create a male filter bank. But the great thing about Libras is that we have a utility function that does all of that for us so that we can then just like get a, a whole filter bank. So we do uh a Li Breza dot filters dot mail and then we should pass some parameters. First of all, we pass the frame size which I've put to 2048 the simple rate and the number of malls that we want to use. And in other words, like this is like kind of like the number of like mel bands that we'll uh see. OK,",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "106.139",
            "questions": [
                "1. What is the main topic discussed in the video related to mel spectrograms?",
                "2. How are male filter banks utilized in the process of creating mel spectrograms?",
                "3. What is the process described for extracting a spectrogram before applying the male filter bank?",
                "4. What mathematical operation is performed between male filter banks and the vanilla spectrogram?",
                "5. What utility function does Libras provide for creating male filter banks?",
                "6. What parameters need to be passed to the utility function in Libras to create a male filter bank?",
                "7. What is the frame size mentioned in the text for the male filter bank?",
                "8. How does the simple rate factor into the creation of a male filter bank?",
                "9. What does the term \"mel bands\" refer to in the context of male filter banks?",
                "10. What are the five different steps mentioned for creating a male filter bank?"
            ]
        },
        {
            "id": 7,
            "text": "uh male spectrogram. OK. So now let's take a look at the at how we can extract this uh filter banks. Well, if you remember I gave you like all the the five different steps we we we should put into place to, to create a male filter bank. But the great thing about Libras is that we have a utility function that does all of that for us so that we can then just like get a, a whole filter bank. So we do uh a Li Breza dot filters dot mail and then we should pass some parameters. First of all, we pass the frame size which I've put to 2048 the simple rate and the number of malls that we want to use. And in other words, like this is like kind of like the number of like mel bands that we'll uh see. OK, let's do that. So nothing really like showed up really. But in all actuality, what happened is that now we have the filter bands. So let's take a look at the shape here. So if you remember from my previous video, I said that this is a mesh",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "130.326",
            "questions": [
                "1. What is the purpose of a male spectrogram?",
                "2. What are the five different steps mentioned for creating a male filter bank?",
                "3. How does the utility function in Libras simplify the process of creating a male filter bank?",
                "4. What parameters need to be passed when using the `Li Breza.dot.filters.mail` function?",
                "5. What is the frame size set to in the example provided?",
                "6. What does the term \"simple rate\" refer to in the context of filter banks?",
                "7. How is the number of mel bands related to the number of malls mentioned in the text?",
                "8. What does the speaker imply when they say \"nothing really like showed up really\"?",
                "9. What is meant by the shape of the filter bands in the context of the discussion?",
                "10. How does the speaker reference their previous video in relation to the current topic?"
            ]
        },
        {
            "id": 8,
            "text": "can then just like get a, a whole filter bank. So we do uh a Li Breza dot filters dot mail and then we should pass some parameters. First of all, we pass the frame size which I've put to 2048 the simple rate and the number of malls that we want to use. And in other words, like this is like kind of like the number of like mel bands that we'll uh see. OK, let's do that. So nothing really like showed up really. But in all actuality, what happened is that now we have the filter bands. So let's take a look at the shape here. So if you remember from my previous video, I said that this is a mesh and on uh the rows like the dimension uh like the first dimension is equal to uh has a size of like 10 in this case, which is equal to the number of uh meal bands. And the second dimension",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "154.511",
            "questions": [
                "1. What is the purpose of using a filter bank in the given context?",
                "2. What parameters are passed when creating the filter bank using Li Breza dot filters dot mail?",
                "3. What frame size is specified in the example?",
                "4. How is the sample rate relevant to the creation of the filter bank?",
                "5. What does the term \"number of malls\" refer to in the context of the filter bank?",
                "6. What is meant by \"mel bands\" in relation to the filter bank?",
                "7. What was the initial observation after creating the filter bank?",
                "8. How does the shape of the mesh relate to the number of mel bands?",
                "9. What does the first dimension of the mesh represent?",
                "10. What is the size of the first dimension in the example provided?"
            ]
        },
        {
            "id": 9,
            "text": "let's do that. So nothing really like showed up really. But in all actuality, what happened is that now we have the filter bands. So let's take a look at the shape here. So if you remember from my previous video, I said that this is a mesh and on uh the rows like the dimension uh like the first dimension is equal to uh has a size of like 10 in this case, which is equal to the number of uh meal bands. And the second dimension has uh a size which is equal to the nus frequency uh of the frame size plus one. So in other words, it's this tt 22,048 divided by two plus one which is equal to 1025. So it checks out. OK. So now what I want to do next is try to visualize this male filter banks. Now, from",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "179.759",
            "questions": [
                "1. What is the significance of the filter bands mentioned in the text?",
                "2. How is the first dimension of the mesh defined in terms of size?",
                "3. What does the second dimension of the mesh represent?",
                "4. What is the calculation used to determine the size of the second dimension?",
                "5. Why is the value 22,048 divided by two in the calculation for the frame size?",
                "6. What does the term \"male filter banks\" refer to in this context?",
                "7. How does the author plan to visualize the male filter banks?",
                "8. What was referenced in the previous video regarding the mesh?",
                "9. What does the author mean by \"nothing really like showed up really\"?",
                "10. How does the information provided relate to the frequency analysis of audio signals?"
            ]
        },
        {
            "id": 10,
            "text": "and on uh the rows like the dimension uh like the first dimension is equal to uh has a size of like 10 in this case, which is equal to the number of uh meal bands. And the second dimension has uh a size which is equal to the nus frequency uh of the frame size plus one. So in other words, it's this tt 22,048 divided by two plus one which is equal to 1025. So it checks out. OK. So now what I want to do next is try to visualize this male filter banks. Now, from my previous video, you may remember, sorry, it wasn't that. It's this one. You may remember that this is a way that we can visualize the male filter band. So uh uh on the x axis, we have frequency on the Y axis over here, we have the weights and we have like all of the different male bands. And here like these points which weight equal one are the centers of the,",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "195.389",
            "questions": [
                "1. What is the size of the first dimension in the given context?",
                "2. How is the size of the second dimension determined?",
                "3. What is the formula used to calculate the value of the second dimension?",
                "4. What numerical value does the second dimension equal in this case?",
                "5. How many mel bands are mentioned in the text?",
                "6. What axes are used when visualizing the mel filter banks?",
                "7. What does the Y-axis represent in the visualization of the mel filter banks?",
                "8. What do the points with a weight equal to one represent in the visualization?",
                "9. How does the visualization of mel filter banks help in understanding frequency?",
                "10. Can you explain the significance of the frame size in relation to the mel filter banks?"
            ]
        },
        {
            "id": 11,
            "text": "has uh a size which is equal to the nus frequency uh of the frame size plus one. So in other words, it's this tt 22,048 divided by two plus one which is equal to 1025. So it checks out. OK. So now what I want to do next is try to visualize this male filter banks. Now, from my previous video, you may remember, sorry, it wasn't that. It's this one. You may remember that this is a way that we can visualize the male filter band. So uh uh on the x axis, we have frequency on the Y axis over here, we have the weights and we have like all of the different male bands. And here like these points which weight equal one are the centers of the, of the filter of the, of the male bands, right? And then we have like this triangular filters like this. OK. So now let's try to visualize this in another way. So what we can do is we can use the Libras display dot spec show if you remember this spec function kind of like",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "211.199",
            "questions": [
                "1. What is the relationship between the size mentioned and the nus frequency of the frame size?",
                "2. How is the value of 1025 derived in the context of the text?",
                "3. What visualization technique is being discussed for the male filter banks?",
                "4. What do the x-axis and y-axis represent in the visualization of the male filter bands?",
                "5. What do the points with a weight equal to one represent in the visualization?",
                "6. How are the triangular filters described in the context of the male bands?",
                "7. What is the purpose of using the Libras display dot spec show function?",
                "8. How does the spec function relate to the visualization of the male filter banks?",
                "9. What are the key components involved in visualizing male filter banks as described in the text?",
                "10. What prior knowledge is referenced in relation to the visualization technique discussed?"
            ]
        },
        {
            "id": 12,
            "text": "my previous video, you may remember, sorry, it wasn't that. It's this one. You may remember that this is a way that we can visualize the male filter band. So uh uh on the x axis, we have frequency on the Y axis over here, we have the weights and we have like all of the different male bands. And here like these points which weight equal one are the centers of the, of the filter of the, of the male bands, right? And then we have like this triangular filters like this. OK. So now let's try to visualize this in another way. So what we can do is we can use the Libras display dot spec show if you remember this spec function kind of like um displays of spectrogram like variables. But we can use it really for any type of um bi dimensional array or matrix. And so we know that filter banks like is an array so well is that a bi dimensional array or it is a matrix? And so we can just like plot it using spectra. OK. So now let's try to do this and let's see what's the results over here? Cool.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "236.919",
            "questions": [
                "1. What is the primary focus of the previous video mentioned in the text?",
                "2. How are the axes labeled in the visualization of the male filter band?",
                "3. What do the points with a weight equal to one represent in the visualization?",
                "4. How are the triangular filters described in the context of the male bands?",
                "5. What function is suggested for visualizing the filter banks in a different way?",
                "6. How does the spec function relate to spectrograms and bi-dimensional arrays?",
                "7. What type of data structure is a filter bank classified as?",
                "8. What is the purpose of using the Libras display dot spec show function?",
                "9. What type of visualization is being attempted with the filter banks?",
                "10. What does the speaker hope to achieve by visualizing the filter banks using spectra?"
            ]
        },
        {
            "id": 13,
            "text": "of the filter of the, of the male bands, right? And then we have like this triangular filters like this. OK. So now let's try to visualize this in another way. So what we can do is we can use the Libras display dot spec show if you remember this spec function kind of like um displays of spectrogram like variables. But we can use it really for any type of um bi dimensional array or matrix. And so we know that filter banks like is an array so well is that a bi dimensional array or it is a matrix? And so we can just like plot it using spectra. OK. So now let's try to do this and let's see what's the results over here? Cool. OK. So on the X axis here you have frequency expressed in Hertz on the Y axis, you have the 10 different uh uh mel bands, right? And you can see that we have like 10 Melbournes because you, you can see we can count like these blocks right there. So 123456789 and then uh 10 over here.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "263.279",
            "questions": [
                "1. What is the purpose of the triangular filters mentioned in the text?",
                "2. How does the Libras display dot spec function relate to visualizing data?",
                "3. What type of data can the spec function display, according to the text?",
                "4. Is a filter bank considered a bi-dimensional array or a matrix?",
                "5. How are the axes labeled in the visualization described in the text?",
                "6. How many Mel bands are mentioned in the text?",
                "7. What is the significance of the frequency being expressed in Hertz?",
                "8. Can you count the number of Mel bands based on the description provided?",
                "9. What is the relationship between filter banks and the visualization technique discussed?",
                "10. Why might someone want to visualize filter banks using a spectrogram-like method?"
            ]
        },
        {
            "id": 14,
            "text": "um displays of spectrogram like variables. But we can use it really for any type of um bi dimensional array or matrix. And so we know that filter banks like is an array so well is that a bi dimensional array or it is a matrix? And so we can just like plot it using spectra. OK. So now let's try to do this and let's see what's the results over here? Cool. OK. So on the X axis here you have frequency expressed in Hertz on the Y axis, you have the 10 different uh uh mel bands, right? And you can see that we have like 10 Melbournes because you, you can see we can count like these blocks right there. So 123456789 and then uh 10 over here. And what, what also what we also see here is that we have like this kind of like bands over here and uh the color uh corresponds to the weight that we have uh for a male band at a certain frequency expressed in Hertz and the brighter the color and the closer we get to a which equal to.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "283.625",
            "questions": [
                "1. What type of display is mentioned in the text for visualizing data?",
                "2. Can the discussed method be applied to any type of bi-dimensional array or matrix?",
                "3. What is an example of a bi-dimensional array mentioned in the text?",
                "4. How is frequency represented on the X-axis of the plot?",
                "5. How many different mel bands are indicated on the Y-axis of the plot?",
                "6. What do the blocks on the Y-axis represent in relation to the mel bands?",
                "7. How is the weight of a mel band at a certain frequency indicated in the spectrogram?",
                "8. What does a brighter color in the spectrogram signify?",
                "9. What is the significance of the frequency being expressed in Hertz in this context?",
                "10. What conclusion can be drawn about the relationship between color and weight of mel bands in the spectrogram?"
            ]
        },
        {
            "id": 15,
            "text": "OK. So on the X axis here you have frequency expressed in Hertz on the Y axis, you have the 10 different uh uh mel bands, right? And you can see that we have like 10 Melbournes because you, you can see we can count like these blocks right there. So 123456789 and then uh 10 over here. And what, what also what we also see here is that we have like this kind of like bands over here and uh the color uh corresponds to the weight that we have uh for a male band at a certain frequency expressed in Hertz and the brighter the color and the closer we get to a which equal to. So for example, let's analyze like this second uh mel band over here. So this is like the kind of like the the center point, the center frequency where we have which that's equal to one. And then the farther we move from the center frequency of this mel band and like the the lower the weights, which basically means like that the colors tend to fade out and then uh outside of the extremity",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "310.17",
            "questions": [
                "1. What is represented on the X axis of the graph?  ",
                "2. How many mel bands are displayed on the Y axis?  ",
                "3. How can one identify the number of mel bands in the graph?  ",
                "4. What does the color in the graph correspond to?  ",
                "5. How does the brightness of the color relate to the weight of a mel band?  ",
                "6. What is the significance of the center frequency in the context of a mel band?  ",
                "7. What happens to the weights as one moves farther from the center frequency of a mel band?  ",
                "8. What does it mean when the colors tend to fade out in the graph?  ",
                "9. What is the value assigned to the center frequency of the second mel band mentioned in the analysis?  ",
                "10. What can be inferred about the extremities of the mel bands based on the text?  "
            ]
        },
        {
            "id": 16,
            "text": "And what, what also what we also see here is that we have like this kind of like bands over here and uh the color uh corresponds to the weight that we have uh for a male band at a certain frequency expressed in Hertz and the brighter the color and the closer we get to a which equal to. So for example, let's analyze like this second uh mel band over here. So this is like the kind of like the the center point, the center frequency where we have which that's equal to one. And then the farther we move from the center frequency of this mel band and like the the lower the weights, which basically means like that the colors tend to fade out and then uh outside of the extremity we have like pitch black, which basically means that which is always like equal to zero. And then here you can actually see induction like this filter, um triangular filters, right? Uh for all of this uh different male bands. So yeah, um let's move on now to extracting mouse spectrograms now that we know, yeah, how to extract male filter banks and how to, yeah, just visualize them. OK.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "333.739",
            "questions": [
                "1. What do the bands in the visualization represent?",
                "2. How is the weight of a male band indicated in the color coding?",
                "3. What does a brighter color signify in relation to the frequency?",
                "4. What is the significance of the center frequency in a mel band?",
                "5. How does the weight change as we move away from the center frequency of a mel band?",
                "6. What does pitch black represent in the context of the frequency visualization?",
                "7. What type of filters are mentioned for the different mel bands?",
                "8. How do triangular filters relate to the visualization of mel bands?",
                "9. What is the next step mentioned after understanding mel filter banks?",
                "10. Why is it important to visualize mel filter banks in this context?"
            ]
        },
        {
            "id": 17,
            "text": "So for example, let's analyze like this second uh mel band over here. So this is like the kind of like the the center point, the center frequency where we have which that's equal to one. And then the farther we move from the center frequency of this mel band and like the the lower the weights, which basically means like that the colors tend to fade out and then uh outside of the extremity we have like pitch black, which basically means that which is always like equal to zero. And then here you can actually see induction like this filter, um triangular filters, right? Uh for all of this uh different male bands. So yeah, um let's move on now to extracting mouse spectrograms now that we know, yeah, how to extract male filter banks and how to, yeah, just visualize them. OK. So extracting mel spectrograms is as easy in Libres as running libros dot T dash mel spectrogram. Now, if you remember uh from my previous video, well, extracting or calculating me spectrograms, uh it's kind of like quite convoluted process because what you should do is actually extracting spectrogram first vanilla spectrograms then",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "358.73",
            "questions": [
                "1. What is the significance of the center frequency in the context of the mel band analysis?  ",
                "2. How do the weights change as one moves away from the center frequency in a mel band?  ",
                "3. What does a pitch black area represent in the context of the mel band weights?  ",
                "4. What type of filters are mentioned in the text for analyzing mel bands?  ",
                "5. What is the primary function of triangular filters in the mel band analysis?  ",
                "6. Which library is mentioned for extracting mel spectrograms?  ",
                "7. What is the process described for extracting mel spectrograms?  ",
                "8. How does the process of extracting mel spectrograms differ from that of calculating vanilla spectrograms?  ",
                "9. What is implied by the term \"extremity\" in relation to the mel band analysis?  ",
                "10. Why is visualizing mel filter banks important before extracting mel spectrograms?  "
            ]
        },
        {
            "id": 18,
            "text": "we have like pitch black, which basically means that which is always like equal to zero. And then here you can actually see induction like this filter, um triangular filters, right? Uh for all of this uh different male bands. So yeah, um let's move on now to extracting mouse spectrograms now that we know, yeah, how to extract male filter banks and how to, yeah, just visualize them. OK. So extracting mel spectrograms is as easy in Libres as running libros dot T dash mel spectrogram. Now, if you remember uh from my previous video, well, extracting or calculating me spectrograms, uh it's kind of like quite convoluted process because what you should do is actually extracting spectrogram first vanilla spectrograms then uh uh creating a male filter bank and then apply mail filter banks to the spectrograms. And that's actually what these uh libre dot feature dot males spectrogram function does under the hood. And indeed what you should do here is pass information for both extracting um",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "383.72",
            "questions": [
                "1. What does \"pitch black\" refer to in the context of the text?",
                "2. How does the text describe the relationship between pitch black and zero?",
                "3. What type of filters are mentioned for analyzing different male bands?",
                "4. What is the purpose of extracting mel spectrograms?",
                "5. Which library is used to extract mel spectrograms in the text?",
                "6. What is the function used to extract mel spectrograms in the Libres library?",
                "7. Why is extracting mel spectrograms described as a convoluted process?",
                "8. What is the first step in the process of calculating mel spectrograms?",
                "9. What does the librosa.feature.melspectrogram function do?",
                "10. What information needs to be passed when using the mel spectrogram extraction function?"
            ]
        },
        {
            "id": 19,
            "text": "So extracting mel spectrograms is as easy in Libres as running libros dot T dash mel spectrogram. Now, if you remember uh from my previous video, well, extracting or calculating me spectrograms, uh it's kind of like quite convoluted process because what you should do is actually extracting spectrogram first vanilla spectrograms then uh uh creating a male filter bank and then apply mail filter banks to the spectrograms. And that's actually what these uh libre dot feature dot males spectrogram function does under the hood. And indeed what you should do here is pass information for both extracting um the uh like vanilla spectrogram as well as the co creating like a male uh filter back. So we pass in the the signal. So in this case, it's our scale signal. Then we should specify the some the frame size, the H length. And these are",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "409.929",
            "questions": [
                "1. What is the primary function used to extract mel spectrograms in Libres?",
                "2. How does the process of extracting mel spectrograms differ from extracting vanilla spectrograms?",
                "3. What is the first step in the process of creating a mel spectrogram?",
                "4. Why is it necessary to create a mel filter bank when extracting mel spectrograms?",
                "5. What information must be passed when using the `libres.feature.melspectrogram` function?",
                "6. What type of signal is mentioned in the text as an example for extracting mel spectrograms?",
                "7. What parameters need to be specified when calculating a mel spectrogram?",
                "8. Can you explain the term \"vanilla spectrogram\" as used in the context of this text?",
                "9. What does the `libres.feature.melspectrogram` function do under the hood?",
                "10. Why might the process of extracting mel spectrograms be considered convoluted?"
            ]
        },
        {
            "id": 20,
            "text": "uh uh creating a male filter bank and then apply mail filter banks to the spectrograms. And that's actually what these uh libre dot feature dot males spectrogram function does under the hood. And indeed what you should do here is pass information for both extracting um the uh like vanilla spectrogram as well as the co creating like a male uh filter back. So we pass in the the signal. So in this case, it's our scale signal. Then we should specify the some the frame size, the H length. And these are uh this is all the information that we need for extracting the spectrogram. And then we also need to pass the number of male bands which yeah, let's put it just like equal to 90 for example, right?",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "434.029",
            "questions": [
                "1. What is the purpose of creating a male filter bank in the context of spectrogram analysis?",
                "2. How does the libre dot feature dot males spectrogram function operate behind the scenes?",
                "3. What types of information should be passed to extract both a vanilla spectrogram and a male filter bank?",
                "4. What is the significance of the scale signal in the spectrogram extraction process?",
                "5. What parameters need to be specified when extracting a spectrogram?",
                "6. What is the function of the frame size in the spectrogram extraction process?",
                "7. What does H length refer to in the context of spectrogram analysis?",
                "8. Why is it suggested to set the number of male bands to 90 for the filter bank?",
                "9. How do male filter banks affect the representation of the spectrogram?",
                "10. What is the relationship between the signal input and the spectrogram output?"
            ]
        },
        {
            "id": 21,
            "text": "the uh like vanilla spectrogram as well as the co creating like a male uh filter back. So we pass in the the signal. So in this case, it's our scale signal. Then we should specify the some the frame size, the H length. And these are uh this is all the information that we need for extracting the spectrogram. And then we also need to pass the number of male bands which yeah, let's put it just like equal to 90 for example, right? And as I said, what ma spectrogram does under the hood is calculating the uh vanilla spectrogram. It creates the male filter banks and apply the male filter banks uh to the spectrogram. OK. So let's run this. And next, what I want to show you guys is the shape of this um males spectrogram, right?",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "453.299",
            "questions": [
                "1. What is a vanilla spectrogram, and how does it differ from a male spectrogram?",
                "2. What is the significance of the frame size and H length in spectrogram extraction?",
                "3. How do we determine the number of male bands to use in the spectrogram?",
                "4. Can you explain the process of creating male filter banks in relation to the spectrogram?",
                "5. What signal is being passed in for the extraction of the spectrogram in this context?",
                "6. Why is it important to specify both the frame size and the number of male bands when extracting a spectrogram?",
                "7. What does the term \"male filter banks\" refer to in the context of spectrogram analysis?",
                "8. How is the shape of the male spectrogram relevant to its analysis?",
                "9. What steps are involved in calculating the male spectrogram from the vanilla spectrogram?",
                "10. What might be the practical applications of using male spectrograms in signal processing?"
            ]
        },
        {
            "id": 22,
            "text": "uh this is all the information that we need for extracting the spectrogram. And then we also need to pass the number of male bands which yeah, let's put it just like equal to 90 for example, right? And as I said, what ma spectrogram does under the hood is calculating the uh vanilla spectrogram. It creates the male filter banks and apply the male filter banks uh to the spectrogram. OK. So let's run this. And next, what I want to show you guys is the shape of this um males spectrogram, right? And so what we get here is a, a bi dimensional ray uh once again and the shape here is like, so the the, the first dimension has like size equal to 90. And this checks out because the, the number of rays that we have in the mount spectrogram hm uh should be equal to the number of um mel bands and in this case is equal to 90. So it checks out and this second dimension",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "471.929",
            "questions": [
                "1. What is the purpose of extracting the spectrogram mentioned in the text?",
                "2. How many male bands are specified in the example?",
                "3. What does the ma spectrogram calculate under the hood?",
                "4. What type of spectrogram is created before applying the male filter banks?",
                "5. What is the shape of the male spectrogram described in the text?",
                "6. What is the size of the first dimension of the male spectrogram?",
                "7. How does the number of rays in the male spectrogram relate to the number of male bands?",
                "8. What is the significance of the second dimension of the male spectrogram?",
                "9. What action is taken after determining the number of male bands?",
                "10. How does the text describe the structure of the array produced by the ma spectrogram?"
            ]
        },
        {
            "id": 23,
            "text": "And as I said, what ma spectrogram does under the hood is calculating the uh vanilla spectrogram. It creates the male filter banks and apply the male filter banks uh to the spectrogram. OK. So let's run this. And next, what I want to show you guys is the shape of this um males spectrogram, right? And so what we get here is a, a bi dimensional ray uh once again and the shape here is like, so the the, the first dimension has like size equal to 90. And this checks out because the, the number of rays that we have in the mount spectrogram hm uh should be equal to the number of um mel bands and in this case is equal to 90. So it checks out and this second dimension as a size which is equal to the number of frames or temporal bins that we extract from the signal, which in this case is equal to 342. OK. So next up what we want to do is just like move from the power spectrogram, apply a logarithm logarithm to and then move to decibels. And so what we do by doing so is moving from mount spectrograms to log me spectrograms. And",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "483.809",
            "questions": [
                "1. What is the primary function of the male spectrogram as described in the text?",
                "2. How does the male spectrogram relate to the vanilla spectrogram?",
                "3. What are male filter banks and what role do they play in creating the male spectrogram?",
                "4. What is the shape of the male spectrogram mentioned in the text?",
                "5. What does the first dimension of the male spectrogram represent, and what is its size?",
                "6. How does the size of the first dimension correspond to the number of mel bands?",
                "7. What does the second dimension of the male spectrogram represent, and what is its size?",
                "8. How many temporal bins are extracted from the signal in the male spectrogram example?",
                "9. What transformation is applied to the power spectrogram to obtain log mel spectrograms?",
                "10. Why is it important to convert from mel spectrograms to log mel spectrograms?"
            ]
        },
        {
            "id": 24,
            "text": "And so what we get here is a, a bi dimensional ray uh once again and the shape here is like, so the the, the first dimension has like size equal to 90. And this checks out because the, the number of rays that we have in the mount spectrogram hm uh should be equal to the number of um mel bands and in this case is equal to 90. So it checks out and this second dimension as a size which is equal to the number of frames or temporal bins that we extract from the signal, which in this case is equal to 342. OK. So next up what we want to do is just like move from the power spectrogram, apply a logarithm logarithm to and then move to decibels. And so what we do by doing so is moving from mount spectrograms to log me spectrograms. And uh this is like very important and we saw this also like a couple of years ago when we extracted uh by spectrograms. And that's because like the way we actually uh perceive amplitude is lori make is not linear. So this passage is quite important uh if you want to use like male spectrograms. OK. So let's do that,",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "505.179",
            "questions": [
                "1. What is the size of the first dimension in the bi-dimensional ray described in the text?",
                "2. How does the number of rays in the mount spectrogram relate to the number of mel bands?",
                "3. What is the size of the second dimension in the bi-dimensional ray?",
                "4. How many temporal bins or frames are extracted from the signal in this case?",
                "5. What transformation is applied to the power spectrogram in the process described?",
                "6. Why is it important to convert mount spectrograms to log mel spectrograms?",
                "7. How does human perception of amplitude influence the need for logarithmic transformation?",
                "8. What spectrogram type was referenced as being extracted a couple of years ago?",
                "9. What is the significance of moving to decibels in the context of spectrograms?",
                "10. Can you explain the difference between linear and logarithmic perception of amplitude?"
            ]
        },
        {
            "id": 25,
            "text": "as a size which is equal to the number of frames or temporal bins that we extract from the signal, which in this case is equal to 342. OK. So next up what we want to do is just like move from the power spectrogram, apply a logarithm logarithm to and then move to decibels. And so what we do by doing so is moving from mount spectrograms to log me spectrograms. And uh this is like very important and we saw this also like a couple of years ago when we extracted uh by spectrograms. And that's because like the way we actually uh perceive amplitude is lori make is not linear. So this passage is quite important uh if you want to use like male spectrograms. OK. So let's do that, that obviously doesn't change at all the shape of the um male spectrogram. Uh Yeah, let me just like show you that. So I'll do a quick log male uh spectrogram like this and I'll do a uh sh",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "532.26",
            "questions": [
                "1. What is the size of the temporal bins extracted from the signal mentioned in the text?",
                "2. What transformation is applied to the power spectrogram in the process described?",
                "3. Why is it necessary to move from mount spectrograms to log mel spectrograms?",
                "4. How does human perception of amplitude relate to the transformation discussed in the text?",
                "5. What does the application of a logarithm to the power spectrogram result in?",
                "6. How does the transformation to decibels affect the shape of the mel spectrogram?",
                "7. What was observed a couple of years ago regarding the extraction of log mel spectrograms?",
                "8. Why is the passage from mount spectrograms to log mel spectrograms described as important?",
                "9. What is the significance of using log mel spectrograms in signal processing?",
                "10. What is the relationship between the shape of the mel spectrogram and the logarithmic transformation applied?"
            ]
        },
        {
            "id": 26,
            "text": "uh this is like very important and we saw this also like a couple of years ago when we extracted uh by spectrograms. And that's because like the way we actually uh perceive amplitude is lori make is not linear. So this passage is quite important uh if you want to use like male spectrograms. OK. So let's do that, that obviously doesn't change at all the shape of the um male spectrogram. Uh Yeah, let me just like show you that. So I'll do a quick log male uh spectrogram like this and I'll do a uh sh shape. And so what we get over here is the same shape that we used to have to the mouse back. So the transformation happens at each, for each item in the matrix, but the overall shape of the matrix uh is not changed. OK.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "560.869",
            "questions": [
                "1. What is the significance of the passage mentioned in the text?",
                "2. How did the perception of amplitude change over the years, according to the text?",
                "3. What role do spectrograms play in the context of the discussion?",
                "4. What is meant by \"male spectrograms\" in this context?",
                "5. How does the transformation affect the individual items in the matrix?",
                "6. Does the overall shape of the matrix change after the transformation?",
                "7. What method is used to create the log male spectrogram mentioned in the text?",
                "8. Can you explain the process of extracting information from spectrograms?",
                "9. Why is it important to understand the non-linear perception of amplitude?",
                "10. How is the relationship between the shape of the male spectrogram and the transformation described?"
            ]
        },
        {
            "id": 27,
            "text": "that obviously doesn't change at all the shape of the um male spectrogram. Uh Yeah, let me just like show you that. So I'll do a quick log male uh spectrogram like this and I'll do a uh sh shape. And so what we get over here is the same shape that we used to have to the mouse back. So the transformation happens at each, for each item in the matrix, but the overall shape of the matrix uh is not changed. OK. Good. So uh the final thing that we want to do here is just actually show the uh male spectrogram. And once again for doing that, we'll use this Li Breza dot display dot uh spec show. So I'm not gonna get into the details here, cos I've quoted them like multiple times in previous videos. So you guys should be aware of all of this. OK? And here we have like our nice little um mouse spectrogram. So",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "580.07",
            "questions": [
                "1. What does the transformation mentioned in the text affect in the matrix?",
                "2. How does the shape of the male spectrogram remain after the transformation?",
                "3. What is the process used to create the male spectrogram in the text?",
                "4. Which library is mentioned for displaying the spectrogram?",
                "5. Why does the speaker choose not to go into details about the spectrogram creation?",
                "6. What is the significance of using a log male spectrogram?",
                "7. How many times has the speaker quoted the details of the spectrogram in previous videos?",
                "8. What does the final output of the process described in the text look like?",
                "9. What does the term \"matrix\" refer to in the context of the spectrogram?",
                "10. What animal is specifically mentioned in relation to the spectrogram?"
            ]
        },
        {
            "id": 28,
            "text": "shape. And so what we get over here is the same shape that we used to have to the mouse back. So the transformation happens at each, for each item in the matrix, but the overall shape of the matrix uh is not changed. OK. Good. So uh the final thing that we want to do here is just actually show the uh male spectrogram. And once again for doing that, we'll use this Li Breza dot display dot uh spec show. So I'm not gonna get into the details here, cos I've quoted them like multiple times in previous videos. So you guys should be aware of all of this. OK? And here we have like our nice little um mouse spectrogram. So on the X axis, we have time and uh this is like this great time and uh each bin is a frame or yeah, it's a temporal bin. And on the Y axis, uh we have the frequency ex well, it's actually expressed in uh the different like mel bands, right? And in this case, we have like 90 bins. And as you can see here, we have like",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "595.539",
            "questions": [
                "1. What transformation occurs for each item in the matrix discussed in the text?",
                "2. How does the overall shape of the matrix change during the transformation?",
                "3. What is the purpose of using the Li Breza dot display dot spec show function?",
                "4. What is the significance of the mouse spectrogram mentioned in the text?",
                "5. What is represented on the X axis of the mouse spectrogram?",
                "6. How is time represented in the context of the mouse spectrogram?",
                "7. What does each bin in the spectrogram correspond to?",
                "8. How is frequency expressed in the spectrogram?",
                "9. How many bins are present in the discussed mel spectrogram?",
                "10. What prior knowledge is assumed for the audience regarding the details mentioned in the text?"
            ]
        },
        {
            "id": 29,
            "text": "Good. So uh the final thing that we want to do here is just actually show the uh male spectrogram. And once again for doing that, we'll use this Li Breza dot display dot uh spec show. So I'm not gonna get into the details here, cos I've quoted them like multiple times in previous videos. So you guys should be aware of all of this. OK? And here we have like our nice little um mouse spectrogram. So on the X axis, we have time and uh this is like this great time and uh each bin is a frame or yeah, it's a temporal bin. And on the Y axis, uh we have the frequency ex well, it's actually expressed in uh the different like mel bands, right? And in this case, we have like 90 bins. And as you can see here, we have like an overall pattern that full is you can't like kind of like guess that we have like a scale here. So we start here with the melt bend which is like close to like a seed and we go up to d uh up until like we go to this point which is like the uh the uh octave uh above. And then you also have like the relative harmonics over here. OK.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "611.359",
            "questions": [
                "1. What is the purpose of using the Li Breza dot display dot spec show in the context of the discussion?",
                "2. What axis represents time in the male spectrogram?",
                "3. How is frequency expressed in the spectrogram discussed?",
                "4. How many bins are present in the male spectrogram mentioned?",
                "5. What does each bin in the spectrogram represent?",
                "6. What overall pattern can be observed in the male spectrogram?",
                "7. How does the mel band scale progress in the spectrogram?",
                "8. What is indicated by the octave mentioned in the context of the spectrogram?",
                "9. What are relative harmonics in relation to the spectrogram?",
                "10. Why might the speaker choose not to go into details about the spectrogram?"
            ]
        },
        {
            "id": 30,
            "text": "on the X axis, we have time and uh this is like this great time and uh each bin is a frame or yeah, it's a temporal bin. And on the Y axis, uh we have the frequency ex well, it's actually expressed in uh the different like mel bands, right? And in this case, we have like 90 bins. And as you can see here, we have like an overall pattern that full is you can't like kind of like guess that we have like a scale here. So we start here with the melt bend which is like close to like a seed and we go up to d uh up until like we go to this point which is like the uh the uh octave uh above. And then you also have like the relative harmonics over here. OK. But um it's kind of like a little bit difficult to understand that like the X axis is uh in this case, like it's divided uh like its discretion has like 90 mel bands because yeah, it's diff it's difficult to see like the discrete points there. So what we can do is just like move this number of mel bands over here from 90 to say 10 and just like rerun the whole thing. Uh So yeah, now, obviously like the mass spectrogram shape is equal to 10",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "637.84",
            "questions": [
                "1. What is represented on the X axis of the graph mentioned in the text?",
                "2. How many temporal bins are used in the analysis described?",
                "3. What is represented on the Y axis of the graph?",
                "4. How many mel bands are mentioned in the text initially?",
                "5. What pattern is observed in the overall data visualization?",
                "6. What is the significance of the \"octave above\" mentioned in the text?",
                "7. Why is it challenging to see the discrete points on the X axis with 90 mel bands?",
                "8. What happens when the number of mel bands is reduced from 90 to 10?",
                "9. How does changing the number of mel bands affect the shape of the mass spectrogram?",
                "10. What is the relationship between mel bands and frequency in the context of this text?"
            ]
        },
        {
            "id": 31,
            "text": "an overall pattern that full is you can't like kind of like guess that we have like a scale here. So we start here with the melt bend which is like close to like a seed and we go up to d uh up until like we go to this point which is like the uh the uh octave uh above. And then you also have like the relative harmonics over here. OK. But um it's kind of like a little bit difficult to understand that like the X axis is uh in this case, like it's divided uh like its discretion has like 90 mel bands because yeah, it's diff it's difficult to see like the discrete points there. So what we can do is just like move this number of mel bands over here from 90 to say 10 and just like rerun the whole thing. Uh So yeah, now, obviously like the mass spectrogram shape is equal to 10 uh and 342 as the second dimension because we have 10 mel bands. OK. So moving on. So yeah, and now we actually see that on the X axis, we have like 10 discrete blocks, right? So we have 123456789 and 10 over there.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "662.83",
            "questions": [
                "1. What is the starting point on the scale mentioned in the text?",
                "2. How many mel bands are initially used in the example?",
                "3. What does the X-axis represent in the context of the discussion?",
                "4. What is the significance of the octave mentioned in the text?",
                "5. How does changing the number of mel bands from 90 to 10 affect the visual representation?",
                "6. What is the shape of the mass spectrogram when using 10 mel bands?",
                "7. Can you describe the process of rerunning the analysis with a different number of mel bands?",
                "8. How many discrete blocks are observed on the X-axis after reducing the number of mel bands?",
                "9. What challenges are mentioned regarding understanding the discrete points on the X-axis?",
                "10. What do the relative harmonics refer to in the context of the scale?"
            ]
        },
        {
            "id": 32,
            "text": "But um it's kind of like a little bit difficult to understand that like the X axis is uh in this case, like it's divided uh like its discretion has like 90 mel bands because yeah, it's diff it's difficult to see like the discrete points there. So what we can do is just like move this number of mel bands over here from 90 to say 10 and just like rerun the whole thing. Uh So yeah, now, obviously like the mass spectrogram shape is equal to 10 uh and 342 as the second dimension because we have 10 mel bands. OK. So moving on. So yeah, and now we actually see that on the X axis, we have like 10 discrete blocks, right? So we have 123456789 and 10 over there. Cool. OK. So by now you should be able to extract male spectrograms and visualize them as well as like extracting male Fitter Banks and visualize them with Python and specifically using the Li Brosa uh library.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "686.299",
            "questions": [
                "1. What is the significance of the X axis in the context of the mel spectrogram described in the text?  ",
                "2. How many mel bands are initially used in the example provided?  ",
                "3. What is the proposed solution to improve the visibility of discrete points on the X axis?  ",
                "4. What happens to the shape of the mass spectrogram when the number of mel bands is changed from 90 to 10?  ",
                "5. How many discrete blocks are represented on the X axis after adjusting the mel bands to 10?  ",
                "6. What is the purpose of extracting mel spectrograms as mentioned in the text?  ",
                "7. What library is suggested for visualizing mel spectrograms and extracting mel filter banks?  ",
                "8. How does changing the number of mel bands affect the second dimension of the mass spectrogram?  ",
                "9. What are the steps involved in rerunning the process after adjusting the number of mel bands?  ",
                "10. Why might it be important to visualize mel filter banks in addition to mel spectrograms?  "
            ]
        },
        {
            "id": 33,
            "text": "uh and 342 as the second dimension because we have 10 mel bands. OK. So moving on. So yeah, and now we actually see that on the X axis, we have like 10 discrete blocks, right? So we have 123456789 and 10 over there. Cool. OK. So by now you should be able to extract male spectrograms and visualize them as well as like extracting male Fitter Banks and visualize them with Python and specifically using the Li Brosa uh library. OK. So uh I hope you enjoyed this video and you found it uh useful. If that's the case, please leave a like to the video and if you want to watch more videos like this and you're not subscribed to the sound of the I channel, please remember to subscribe if you have any questions as always leave them in the comments section below. Uh That's all for today. I guess I'll see you next time. Cheers.",
            "video": "Extracting Mel Spectrograms with Python",
            "start_time": "715.859",
            "questions": [
                "1. What are the dimensions of the spectrogram mentioned in the text?",
                "2. How many mel bands are referred to in the discussion?",
                "3. What does the X axis represent in the context of the spectrogram?",
                "4. Can you list the discrete blocks mentioned on the X axis?",
                "5. What library is suggested for visualizing mel spectrograms and mel filter banks?",
                "6. What programming language is used for the visualization tasks discussed?",
                "7. What action does the speaker encourage viewers to take if they found the video useful?",
                "8. How can viewers engage with the content if they have questions?",
                "9. What channel is mentioned for viewers to subscribe to for more videos?",
                "10. What is the overall purpose of the video according to the text?"
            ]
        }
    ]
}